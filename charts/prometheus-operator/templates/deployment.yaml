{{- $namespace := printf "%s" (include "prometheus-operator.namespace" .) }}
{{- $defaultKubeletSvcName := printf "%s-kubelet" (include "prometheus-operator.fullname" .) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "prometheus-operator.fullname" . }}
  namespace: {{ template "prometheus-operator.namespace" . }}
  labels:
    app: {{ template "prometheus-operator.name" . }}
{{ include "prometheus-operator.labels" . | indent 4 }}
{{- if .Values.annotations }}
  annotations:
{{ toYaml .Values.annotations | indent 4 }}
{{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "prometheus-operator.name" . }}
      release: {{ $.Release.Name | quote }}
  template:
    metadata:
      labels:
        app: {{ template "prometheus-operator.name" . }}
{{ include "prometheus-operator.labels" . | indent 8 }}
{{- if .Values.podLabels }}
{{ toYaml .Values.podLabels | indent 8 }}
{{- end }}
{{- if .Values.podAnnotations }}
      annotations:
{{ toYaml .Values.podAnnotations | indent 8 }}
{{- end }}
    spec:
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      containers:
        - name: {{ template "prometheus-operator.name" . }}
          {{- if .Values.image.sha }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}@sha256:{{ .Values.image.sha }}"
          {{- else }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          {{- end }}
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          args:
            {{- if .Values.kubeletService.enabled }}
            - --kubelet-service={{ .Values.kubeletService.namespace }}/{{ default $defaultKubeletSvcName .Values.kubeletService.name  }}
            {{- end }}
            {{- if .Values.logFormat }}
            - --log-format={{ .Values.logFormat }}
            {{- end }}
            {{- if .Values.logLevel }}
            - --log-level={{ .Values.logLevel }}
            {{- end }}
            {{- if .Values.denyNamespaces }}
            - --deny-namespaces={{ .Values.denyNamespaces | join "," }}
            {{- end }}
            {{- with $.Values.namespaces }}
            {{ $ns := default (list nil) .additional }}
            {{- if .releaseNamespace }}
            {{- $ns = append $ns $namespace }}
            {{- end }}
            - --namespaces={{ $ns | join "," }}
            {{- end }}
            - --localhost=127.0.0.1
            {{- if .Values.prometheusDefaultBaseImage }}
            - --prometheus-default-base-image={{ .Values.prometheusDefaultBaseImage }}
            {{- end }}
            {{- if .Values.alertmanagerDefaultBaseImage }}
            - --alertmanager-default-base-image={{ .Values.alertmanagerDefaultBaseImage }}
            {{- end }}
            {{- if .Values.prometheusConfigReloader.image.sha }}
            - --prometheus-config-reloader={{ .Values.prometheusConfigReloader.image.repository }}:{{ .Values.prometheusConfigReloader.image.tag }}@sha256:{{ .Values.prometheusConfigReloader.image.sha }}
            {{- else }}
            - --prometheus-config-reloader={{ .Values.prometheusConfigReloader.image.repository }}:{{ .Values.prometheusConfigReloader.image.tag }}
            {{- end }}
            - --config-reloader-cpu-request={{ .Values.prometheusConfigReloader.resources.requests.cpu }}
            - --config-reloader-cpu-limit={{ .Values.prometheusConfigReloader.resources.limits.cpu }}
            - --config-reloader-memory-request={{ .Values.prometheusConfigReloader.resources.requests.memory }}
            - --config-reloader-memory-limit={{ .Values.prometheusConfigReloader.resources.limits.memory }}
            {{- if .Values.alertmanagerInstanceNamespaces }}
            - --alertmanager-instance-namespaces={{ .Values.alertmanagerInstanceNamespaces | join "," }}
            {{- end }}
            {{- if .Values.alertmanagerConfigNamespaces }}
            - --alertmanager-config-namespaces={{ .Values.alertmanagerConfigNamespaces | join "," }}
            {{- end }}
            {{- if .Values.prometheusInstanceNamespaces }}
            - --prometheus-instance-namespaces={{ .Values.prometheusInstanceNamespaces | join "," }}
            {{- end }}
            {{- if .Values.thanosImage.sha }}
            - --thanos-default-base-image={{ .Values.thanosImage.repository }}:{{ .Values.thanosImage.tag }}@sha256:{{ .Values.thanosImage.sha }}
            {{- else }}
            - --thanos-default-base-image={{ .Values.thanosImage.repository }}:{{ .Values.thanosImage.tag }}
            {{- end }} 
            {{- if .Values.thanosRulerInstanceNamespaces }}
            - --thanos-ruler-instance-namespaces={{ .Values.thanosRulerInstanceNamespaces | join "," }}
            {{- end }}
            {{- if .Values.secretFieldSelector }}
            - --secret-field-selector={{ .Values.secretFieldSelector }}
            {{- end }}
            {{- if .Values.clusterDomain }}
            - --cluster-domain={{ .Values.clusterDomain }}
            {{- end }}
            {{- if .Values.tls.enabled }}
            - --web.enable-tls=true
            - --web.cert-file=/cert/{{ if .Values.admissionWebhooks.certManager.enabled }}tls.crt{{ else }}cert{{ end }}
            - --web.key-file=/cert/{{ if .Values.admissionWebhooks.certManager.enabled }}tls.key{{ else }}key{{ end }}
            - --web.listen-address=:{{ .Values.tls.internalPort }}
            - --web.tls-min-version={{ .Values.tls.tlsMinVersion }}
          ports:
            - containerPort: {{ .Values.tls.internalPort }}
              name: https
          {{- else }}
          ports:
            - containerPort: 8080
              name: http
          {{- end }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          securityContext:
{{ toYaml .Values.containerSecurityContext | indent 12 }}
{{- if .Values.tls.enabled }}
          volumeMounts:
            - name: tls-secret
              mountPath: /cert
              readOnly: true
      volumes:
        - name: tls-secret
          secret:
            defaultMode: 420
            secretName: {{ template "prometheus-operator.fullname" . }}-admission
{{- end }}
    {{- with .Values.dnsConfig }}
      dnsConfig:
{{ toYaml . | indent 8 }}
    {{- end }}
{{- if .Values.securityContext }}
      securityContext:
{{ toYaml .Values.securityContext | indent 8 }}
{{- end }}
      serviceAccountName: {{ template "prometheus-operator.serviceAccountName" . }}
{{- if .Values.hostNetwork }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
{{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
